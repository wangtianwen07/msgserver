#####################################spring-boot config##############################
server.port=9000
#management.port=8081
logging.file=msgserver.log
#TRACE < DEBUG < INFO < WARN < ERROR < FATAL
logging.level.root=INFO
#camel让java进程在后台运行
camel.springboot.main-run-controller=true
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
####################################csscis config####################################
#本机服务器IP
css.server.ip=127.0.0.1
#server id,分布试部署时需要不同设置
css.server.id=10
#logging.level.org.springframework.web=DEBUG
#ftp server config
##sftp服务器的文件位置是相对于root登录后的相对地址
##readLock=rename可以阻止camel读取正在被写入的文件,delay=5s是每隔5秒钟扫描ftp服务器上是否有新文件生成,下载服务器文件，并将服务器上的文件转移到done文件夹(/upload/receive/done)
ftp.server.ip=10.192.2.201
ftp.server.username=ftpuser
ftp.server.password=root123
ftp.server.port=21
#ftp文件下载-开卡结果下载
ftp.server.receive.dir=/csscis/receive
ftp.server.receive.info=ftp://{{ftp.server.ip}}:{{ftp.server.port}}{{ftp.server.receive.dir}}?username={{ftp.server.username}}&move=done&password={{ftp.server.password}}&delay=5s&readLock=rename&binary=true&passiveMode=false
ftp.local.receive.dir=d:/csscis/receive
ftp.local.receive.info=file:{{ftp.local.receive.dir}}
#本地文件处理-处理开卡结果
route.parserfile.info = {{ftp.local.receive.info}}?delay=10s&move=done&readLock=rename
route.parserfile.dir = {{ftp.local.receive.info}}/done
#本地文件上传-开卡文件生成、上传
ftp.local.send.dir=d:/bank/send
ftp.local.send.info=file:{{ftp.local.send.dir}}?delay=10s&move=done&readLock=rename
ftp.server.send.dir=/bank/send
ftp.server.send.info=ftp://{{ftp.server.ip}}:{{ftp.server.port}}{{ftp.server.send.dir}}?username={{ftp.server.username}}&password={{ftp.server.password}}&binary=true&passiveMode=false
##数据库
spring.datasource.url=jdbc:mysql://10.192.2.250:3306/test
spring.datasource.username=msg
spring.datasource.password=42fsq3@sfswfeewfssb
spring.datasource.driverClassName=com.mysql.jdbc.Driver
##druid-datasource
spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
spring.datasource.maxWait=60000  
spring.datasource.timeBetweenEvictionRunsMillis=60000  
spring.datasource.minEvictableIdleTimeMillis=300000  
spring.datasource.validationQuery=SELECT 1
spring.datasource.testWhileIdle=true  
spring.datasource.testOnBorrow=false  
spring.datasource.testOnReturn=false  
spring.datasource.poolPreparedStatements=true  
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20  
spring.datasource.filters=stat,wall,log4j  
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 
